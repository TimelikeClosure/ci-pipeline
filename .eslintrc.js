"use strict";

module.exports = {
    "env": {
        "commonjs": true,
        "es6": true,
        "node": true,
        "browser": true,
    },
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly",
    },
    "parserOptions": {
        "ecmaVersion": 2019,
    },
    "root": true,
    "rules": {
        "accessor-pairs": "off",
        "array-bracket-newline": ["error", "consistent"],
        "array-bracket-spacing": ["error", "never", {
            "singleValue": false,
            "objectsInArrays": false,
            "arraysInArrays": false,
        }],
        "array-callback-return": "error",
        "array-element-newline": "off", //  allow for conceptual groupings
        "arrow-body-style": "off",  //  makes debugging more difficult
        "arrow-parens": "off",
        "arrow-spacing": "error",
        "block-scoped-var": "off",
        "block-spacing": "error",
        "brace-style": ["error", "1tbs", {
            "allowSingleLine": true
        }],
        "callback-return": ["error", ["callback", "next", "done", /* "resolve",  */"reject"]],  // false-positive: path.resolve
        "camelcase": "off",
        "capitalized-comments": "off",
        "class-methods-use-this": "error",
        "comma-dangle": ["error", {
            "arrays": "always-multiline", "objects": "always-multiline",
            "imports": "ignore", "exports": "ignore", "functions": "never"
        }],
        "comma-spacing": "error",
        "comma-style": "error",
        "complexity": ["warn", 20],    //  temporarily warn for testing, requirements loosened for models and/or lib functions?
        "computed-property-spacing": "error",
        "consistent-return": "error",
        "consistent-this": "off",
        "constructor-super": "error",
        "curly": "error",
        "default-case": "error",
        "dot-location": ["error", "property"],
        "dot-notation": "error",
        "eol-last": "error",
        "eqeqeq": ["error", "always", {
            "null": "ignore",
        }],
        "for-direction": "error",
        "func-call-spacing": "error",
        "func-name-matching": "off",
        "func-names": "off",
        "func-style": "off",
        "function-paren-newline": ["error", "consistent"],
        "generator-star-spacing": ["error", {  //  coordinate with space-before-function-paren
            "before": false,
            "after": true,
            "anonymous": "neither",
            "named": "after",
        }],
        "getter-return": "error",
        "global-require": "warn",
        "guard-for-in": "error",
        "handle-callback-err": ["error", "^(err|error|.+(E|_e)rror)$"],
        "id-blacklist": ["error",
            "c", "d", "f", "g", "h", "j", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
            "cb", "err",
        ],
        "id-length": "off",
        "id-match": "off",
        "implicit-arrow-linebreak": "error",
        "indent": ["error", 4, {
            "SwitchCase": 1,
            "VariableDeclarator": 1,
            "outerIIFEBody": 1,
            "MemberExpression": 0,
            "FunctionDeclaration": {
                "parameters": 1,
                "body": 1
            },
            "FunctionExpression": {
                "parameters": 1,
                "body": 1
            },
            "CallExpression": {
                "arguments": 1
            },
            "ArrayExpression": 1,
            "ObjectExpression": 1,
            "ImportDeclaration": 1,
            "flatTernaryExpressions": true,
            "ignoredNodes": ["ConditionalExpression"],
            "ignoreComments": true
        }],
        "init-declarations": "off",
        "jsx-quotes": "error",
        "key-spacing": "error",
        "keyword-spacing": "error",
        "linebreak-style": "off",
        "line-comment-position": "off",
        "lines-around-comment": ["error", {
            "beforeBlockComment": true,
            "afterBlockComment": false,
            "beforeLineComment": false,
            "afterLineComment": false,
            "allowBlockStart": true,
            "allowBlockEnd": true,
            "allowObjectStart": true,
            "allowObjectEnd": true,
            "allowArrayStart": true,
            "allowArrayEnd": true,
            "allowClassStart": true,
            "allowClassEnd": true
        }],
        "lines-between-class-members": "error",
        "max-classes-per-file": "error",
        "max-depth": ["warn", { "max": 4 }],   //  temporarily warn for testing, requirements loosened for models and/or lib functions?
        "max-len": ["error", {
            "code": 140,
            "tabWidth": 4,
            "ignoreComments": true,
            "ignoreTrailingComments": true,
            "ignoreUrls": true,
            "ignoreStrings": true,
            "ignoreTemplateLiterals": true,
            "ignoreRegExpLiterals": true
        }],
        "max-lines": "off",
        "max-lines-per-function": "off",
        "max-nested-callbacks": "error",
        "max-params": "off",
        "max-statements": "off",
        "max-statements-per-line": ["error", { "max": 3 }],
        "multiline-comment-style": "off",
        "multiline-ternary": ["error", "always-multiline"],
        "new-cap": "off",
        "newline-per-chained-call": "off",
        "new-parens": "error",
        "no-alert": "error",
        "no-array-constructor": "error",
        "no-async-promise-executor": "error",
        "no-await-in-loop": "off",
        "no-bitwise": "off",
        "no-buffer-constructor": "error",
        "no-caller": "error",
        "no-case-declarations": "error",
        "no-class-assign": "error", //  coordinate with no-func-assign
        "no-compare-neg-zero": "error",
        "no-cond-assign": ["error", "except-parens"],
        "no-confusing-arrow": "off",
        "no-console": "off",
        "no-constant-condition": "error",
        "no-const-assign": "error",
        "no-continue": "error",
        "no-control-regex": "off",
        "no-debugger": "error",
        "no-delete-var": "error",
        "no-div-regex": "off",
        "no-dupe-args": "error",
        "no-dupe-class-members": "error",   //  verify this doesn't cause issues with composition
        "no-dupe-keys": "error",    //  applies to spread properties?
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-else-return": ["error", {
            "allowElseIf": false,
        }],
        "no-empty": ["error", {
            "allowEmptyCatch": false,
        }],
        "no-empty-character-class": "error",
        "no-empty-function": "error",
        "no-empty-pattern": "error",
        "no-eq-null": "off",
        "no-eval": "error",
        "no-ex-assign": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-extra-boolean-cast": "error",
        "no-extra-label": "error",
        "no-extra-parens": "off",
        "no-extra-semi": "error",
        "no-fallthrough": ["error", {
            "commentPattern": "no (?:break|return)",
        }],
        "no-floating-decimal": "error",
        "no-func-assign": "error",
        "no-global-assign": ["error", {
            "exceptions": ["Promise"]
        }],
        "no-implicit-coercion": ["error", {
            "boolean": true,
            "number": true,
            "string": true,
            "allow": [],
        }],
        "no-implicit-globals": "off",
        "no-implied-eval": "error",
        "no-inline-comments": "off",
        "no-inner-declarations": ["error", "functions"],
        "no-invalid-regexp": "error",
        "no-invalid-this": "off",
        "no-irregular-whitespace": ["error", {
            "skipStrings": true,
            "skipComments": false,
            "skipRegExps": true,
            "skipTemplates": true,
        }],
        "no-iterator": "error",
        "no-labels": "off",
        "no-label-var": "error",
        "no-lone-blocks": "error",
        "no-lonely-if": "off",
        "no-loop-func": "off",
        "no-magic-numbers": "off",
        "no-misleading-character-class": "error",
        "no-mixed-operators": "off",
        "no-mixed-requires": "error",
        "no-mixed-spaces-and-tabs": "error",
        "no-multi-assign": "off",
        "no-multiple-empty-lines": ["error", {
            "max": 1,
            "maxBOF": 0,
            "maxEOF": 1,
        }],
        "no-multi-spaces": ["error", {
            "ignoreEOLComments": true,
            "exceptions": {
                "BinaryExpression": false,
                "ImportDeclaration": false,
                "Property": false,
                "VariableDeclarator": false,
            },
        }],
        "no-multi-str": "error",
        "nonblock-statement-body-position": "error",
        "no-negated-condition": "off",
        "no-nested-ternary": "off",
        "no-new": "error",
        "no-new-func": "error",
        "no-new-object": "off",
        "no-new-require": "error",
        "no-new-symbol": "error",
        "no-new-wrappers": "error",
        "no-obj-calls": "error",
        "no-octal": "error",
        "no-octal-escape": "error",
        "no-param-reassign": "off",
        "no-path-concat": "error",
        "no-plusplus": "off",
        "no-process-env": "off",
        "no-process-exit": "error",
        "no-proto": "error",
        "no-prototype-builtins": "warn",
        "no-redeclare": "warn",
        "no-regex-spaces": "off",
        "no-restricted-globals": "off", //  add in specific cases as necessary
        "no-restricted-imports": "off",
        "no-restricted-modules": "off", //  add in specific cases as necessary
        "no-restricted-properties": "off", //  add in specific cases as necessary
        "no-restricted-syntax": "off", //  add in specific cases as necessary
        "no-return-assign": "off",
        "no-return-await": "error",
        "no-script-url": "error",
        "no-self-assign": "error",
        "no-self-compare": "error",
        "no-sequences": "error",
        "no-shadow": "off",
        "no-shadow-restricted-names": "error",
        "no-sparse-arrays": "error",
        "no-sync": "error",
        "no-tabs": "error",
        "no-template-curly-in-string": "off",
        "no-ternary": "off",
        "no-this-before-super": "error",
        "no-throw-literal": "error",
        "no-trailing-spaces": "error",
        "no-undef": "error",
        "no-undefined": "off",
        "no-undef-init": "error",
        "no-underscore-dangle": "off",
        "no-unexpected-multiline": "error",
        "no-unmodified-loop-condition": "error",
        "no-unneeded-ternary": "error",
        "no-unreachable": "error",
        "no-unsafe-finally": "error",
        "no-unsafe-negation": "error",
        "no-unused-expressions": ["error", {
            "allowShortCircuit": false,
            "allowTernary": false,
            "allowTaggedTemplates": false,
        }],
        "no-unused-labels": "error",
        "no-unused-vars": ["error", {
            "vars": "local",
            "args": "none",
            "argsIgnorePattern": "^_",
            "ignoreRestSiblings": true,
            "caughtErrors": "none"
        }],
        "no-use-before-define": "off",  //  valid for cases of mutual recursion
        "no-useless-call": "error",
        "no-useless-catch": "error",
        "no-useless-computed-key": "error",
        "no-useless-concat": "off",
        "no-useless-constructor": "error",
        "no-useless-escape": "error",
        "no-useless-rename": "off",
        "no-useless-return": "off",
        "no-var": "off",
        "no-void": "off",
        "no-warning-comments": ["warn", {
            "terms": ["todo", "fixme", "xxx"]
        }],
        "no-whitespace-before-property": "error",
        "no-with": "error",
        "object-curly-newline": ["error", {
            "consistent": true,
        }],
        "object-curly-spacing": ["error", "always"],
        "object-property-newline": "off",   //  allow for conceptual groupings
        "object-shorthand": "off",
        "one-var": "off",
        "one-var-declaration-per-line": "off",
        "operator-assignment": "error",
        "operator-linebreak": ["error", "before"],
        "padded-blocks": ["error", "never"],
        "padding-line-between-statements": ["error"], //  add in specific cases as necessary
        "prefer-arrow-callback": ["error", {
            "allowNamedFunctions": true,
            "allowUnboundThis": true
        }],
        "prefer-const": ["error", {
            "destructuring": "any",
            "ignoreReadBeforeAssign": true,
        }],
        "prefer-destructuring": "off",
        "prefer-named-capture-group": "warn",
        "prefer-numeric-literals": "error",
        "prefer-object-spread": "off",
        "prefer-promise-reject-errors": "off",
        "prefer-rest-params": "off",
        "prefer-spread": "off",
        "prefer-template": "off",
        "quote-props": "off",
        "quotes": "off",
        "radix": "off",
        "require-atomic-updates": "error",
        "require-await": "off",
        "require-unicode-regexp": "off",
        "require-yield": "error",
        "rest-spread-spacing": "error",
        "semi": ["error", "always", {
            "omitLastInOneLineBlock": true
        }],
        "semi-spacing": "error",
        "semi-style": "error",
        "sort-imports": "off",
        "sort-keys": "off",
        "sort-vars": "off",
        "space-before-blocks": ["error", {
            "functions": "never",
            "keywords": "never",
            "classes": "always"
        }],
        "space-before-function-paren": ["error", {
            "anonymous": "never",
            "named": "never",
            "asyncArrow": "always"
        }],
        "spaced-comment": ["error", "always", {
            "block": {
                "balanced": true,
            },
        }],
        "space-infix-ops": "off",
        "space-in-parens": "error",
        "space-unary-ops": "off",
        "strict": ["error", "global"],
        "switch-colon-spacing": "off",  //  conflicts with space-before-blocks
        "symbol-description": "off",
        "template-curly-spacing": "error",
        "template-tag-spacing": ["error", "never"], //  coordinate with space-before-function-paren
        "unicode-bom": "error",
        "use-isnan": "error",
        "valid-typeof": ["error", {
            "requireStringLiterals": false
        }],
        "vars-on-top": "off",
        "wrap-iife": ["error", "inside", {
            "functionPrototypeMethods": true,
        }],
        "wrap-regex": "off",
        "yield-star-spacing": ["error", {
            "before": false,
            "after": true,
        }],
        "yoda": "off",
    },
    "overrides": [
        {
            // Only allow process global to be used from root app.
            "files": ["index.js"],
            "rules": {
                "no-process-env": "off",
                "no-process-exit": "off",
            },
        },
        {
            // Relax performance restrictions on one-time startup files.
            "files": ["index.js", "models/index.js", "models/models/index.js", "models/json_definitions/*/index.js"],
            "rules": {
                "no-sync": "off",
            },
        },
        {
            // Relax performance and subtle error restrictions for files that are not part of main app runtime.
            "files": ["config/database_migration.js", "models/migrations/*", "models/seeders/*"],
            "rules": {
                "default-case": "off",
                "guard-for-in": "off",
                "no-prototype-builtins": "off",
                "no-sync": "off",
            },
        },
        {
            // Relax rules for test files
            "files": ["test/**/*", "**/*.test.js"],
            "rules": {
                "complexity": "off",
                "global-require": "off",
                "guard-for-in": "off",
                "max-classes-per-file": "off",
                "no-console": "error",
                "no-empty-function": "off",
                "no-prototype-builtins": "off",
                "no-sync": "off",
                "no-undef": "off",
                "no-unused-expressions": "off",
                "strict": "off",
                "jsdoc/require-jsdoc": "off"
            },
        },
    ],
}
